package com.mycompany.myapp;


import com.codename1.components.OnOffSwitch;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.CheckBox;
import com.codename1.ui.Container;
import com.codename1.ui.TextField;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import static com.codename1.ui.layouts.BoxLayout.y;
import com.codename1.ui.spinner.Picker;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        
       //1.declarer la grande Form
       Form f = new Form("Form",BoxLayout.y());
       
       //2.declarer les texte field
       TextField tfNom = new TextField("","nom");
       TextField tfPrenom = new TextField("","prenom");
       TextField tfPassword = new TextField("","password");
       TextField tfPhone=new TextField("","phone");
       TextField tfEmail = new TextField("","email");
       Picker date= new Picker();
       //make password invisible
       tfPassword.setConstraint(TextField.PASSWORD);
       //make phone
       tfPhone.setConstraint(TextField.PHONENUMBER);
       //make email
       tfEmail.setConstraint(TextField.EMAILADDR);
       
       //3.add textfield to Form
       f.add(tfNom);
       f.add(tfPrenom);
       f.add(tfPassword);
       f.add(tfPhone);
       f.add(tfEmail);
       f.add(date);
       
         
       //4.create a container with Boxlayout.x()
       Container cnt = new Container(BoxLayout.xCenter());
       //add label & onOffSwitch
       Label l=new Label("Gender ");
       OnOffSwitch onOFF= new OnOffSwitch();
       
       //5.add label & onOFF to the container
       cnt.add(l);
       cnt.add(onOFF);
       
       //6.add container to Form
       f.add(cnt);
       
       //7.add checkBox 
       CheckBox chTennis = new CheckBox("tennis");
       CheckBox chFoot = new CheckBox("foot");
       CheckBox chNatation = new CheckBox("natation");
       CheckBox chLecture = new CheckBox("lecture");
       
       //8.add to Form
       f.add(chTennis);
       f.add(chFoot);
       f.add(chNatation);
       f.add(chLecture);
       
       //9.add button
       Button btn= new Button("valider");
       //10.add to form
       f.add(btn);
       
       //9.show Form
       f.show();
       //II-second Form recuperation des data
       //1. faire listener sur button pour recuperer les data
       btn.addActionListener(new ActionListener(){
           @Override
           public void actionPerformed(ActionEvent evt) {
               //1.declaration d'une 2Ã© Form
                Form f2=new Form(BoxLayout.y());
                //2.declarationdes label pour la recuperation des data
                Label lNom= new Label("Nom: "+ tfNom.getText());
                Label lPrenom= new Label("Prenom: " + tfPrenom.getText());
                Label lPassword= new Label("Password: "+ tfPassword.getText());
                Label lPhone= new Label("Phone: "+tfPhone.getText());
                Label lDate= new Label(date.getDate().toString());
                //3.declarer type gender et s'il est homme ou femme
                Label lGender = new Label("Gender: ");
                //4.condusion sur onOff
                if(onOFF.isValue())
                    lGender.setText("Gender: Femme");
                else 
                    lGender.setText("Gender: Homme");
                
                //5.recuperer les hobbies
                Label lHobbies= new Label("hobbies: ");
                String ch= "Hobbies";
                if(chFoot.isSelected())
                    ch+="Foot, ";
                if(chTennis.isSelected())
                    ch+=" Tennis,";
                if(chNatation.isSelected())
                    ch+= " Natation, ";
                if(chLecture.isSelected())
                    ch+= " Lecture";
                lHobbies.setText(ch);
                //6.add all to form2
                f2.add(lNom);
                f2.add(lPrenom);
                f2.add(lPassword);
                f2.add(lPhone);
                f2.add(lDate);
                f2.add(lGender);
                f2.add(lHobbies);
                f2.show();
                
                
                
           }
           
       });
       
       
       
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
